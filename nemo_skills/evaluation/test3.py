x = {"id": 101, "difficulty_types": 6, "question": "from typing import List\n\n\ndef is_new_year(numbers: List[int]):\n    \"\"\"\n    Given a list containing four numbers. First, calculate the square of the first number.\n    For the second number, check if it is divisible by 3. If it is, add it to the result, otherwise subtract it.\n    Multiply the resulting value by the third number three times. For the fourth number, calculate the sum of its digits\n    and compare it with the first number. If the sum is greater, add the fourth number to the result,\n    otherwise keep the result unchanged. If the final result equals 2024, return the string \"Happy New Year\",\n    otherwise return \"Whoops\".\n    >>> is_new_year([2, 0, 2, 4])\n    \"Whoops\"\n    >>> is_new_year([3, 5, 6, 1160])\n    \"Happy New Year\"\n    \"\"\"",
     "prompt": "Write a Python function according to the function name and the problem description in the docstring below. \n\nfrom typing import List\n\n\ndef is_new_year(numbers: List[int]):\n    \"\"\"\n    Given a list containing four numbers. First, calculate the square of the first number.\n    For the second number, check if it is divisible by 3. If it is, add it to the result, otherwise subtract it.\n    Multiply the resulting value by the third number three times. For the fourth number, calculate the sum of its digits\n    and compare it with the first number. If the sum is greater, add the fourth number to the result,\n    otherwise keep the result unchanged. If the final result equals 2024, return the string \"Happy New Year\",\n    otherwise return \"Whoops\".\n    >>> is_new_year([2, 0, 2, 4])\n    \"Whoops\"\n    >>> is_new_year([3, 5, 6, 1160])\n    \"Happy New Year\"\n    \"\"\"", "function_name": "is_new_year", "parameters": ["numbers"], "assert_statements": ["assert is_new_year([18, 71, 2, 296]) == \"Happy New Year\"", "assert is_new_year([60, 2022, 1, 446]) == \"Whoops\"", "assert is_new_year([10, 5, 6, 111]) == \"Whoops\""]}

print(x["question"])
